{"ast":null,"code":"var _jsxFileName = \"/Users/alanboyce/Documents/secure-software-engineering/poker101-ui/src/game/components/CreateGameModal.tsx\";\nimport axios from 'axios';\nimport { Component } from 'react';\nimport { Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader } from 'reactstrap';\n\nclass CreateGameModal extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.create = () => {\n      const {\n        created\n      } = this.props;\n      const playersArray = [];\n      const p1 = {\n        id: 'gf93j023jg',\n        points: 3823\n      };\n      const p2 = {\n        id: '390gj3h8g2',\n        points: 8390\n      };\n      playersArray.push(p1);\n      playersArray.push(p2); //use Partial here, only need requiredPointsPerPlayer, antiAmount, players\n\n      const newGame = {\n        requiredPointsPerPlayer: 5000,\n        antiAmount: 250,\n        players: playersArray\n      };\n      axios.post(`http://localhost:8000/api/game/create`, {\n        game: newGame\n      }).then(res => {\n        if (res.data) {\n          const {\n            game\n          } = res.data;\n          console.log(game);\n          created(game);\n        }\n      }).catch(error => {\n        alert(\"Failed to create game \\n\\n\" + error);\n      });\n    };\n  }\n\n  render() {\n    const {\n      isOpen,\n      toggle\n    } = this.props;\n    const {\n      create\n    } = this;\n    return /*#__PURE__*/React.createElement(Modal, {\n      size: \"lg\",\n      isOpen,\n      toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }, \"Create New Game\"), /*#__PURE__*/React.createElement(ModalBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"label-text\",\n      for: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }\n    }, \"Required chips per player\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"email\",\n      name: \"email\",\n      id: \"exampleEmail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 68\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"label-text\",\n      for: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }\n    }, \"Anti price\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 50\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      className: \"label-text\",\n      for: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }\n    }, \"Invite players (up to 5)\"), /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      name: \"\",\n      id: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 50\n      }\n    })))), /*#__PURE__*/React.createElement(ModalFooter, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      onClick: create,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, \"Create\"), /*#__PURE__*/React.createElement(Button, {\n      color: \"warning\",\n      onClick: toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }\n    }, \"Cancel\")));\n  }\n\n}\n\nexport default CreateGameModal;","map":{"version":3,"sources":["/Users/alanboyce/Documents/secure-software-engineering/poker101-ui/src/game/components/CreateGameModal.tsx"],"names":["axios","Component","Button","Form","FormGroup","Input","Label","Modal","ModalBody","ModalFooter","ModalHeader","CreateGameModal","create","created","props","playersArray","p1","id","points","p2","push","newGame","requiredPointsPerPlayer","antiAmount","players","post","game","then","res","data","console","log","catch","error","alert","render","isOpen","toggle"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { Component } from 'react';\nimport {Button, Form, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from 'reactstrap';\nimport Game from '../models/Game';\nimport Player from '../models/Player';\n\nclass CreateGameModal extends Component<Props> {\n  render() {\n    const { isOpen, toggle } = this.props;\n    const { create } = this;\n\n    return (\n      <Modal size=\"lg\" {...{ isOpen, toggle }}>\n        <ModalHeader>Create New Game</ModalHeader>\n        <ModalBody>\n          <Form>\n            <FormGroup>\n              <Label className=\"label-text\" for=\"\">Required chips per player</Label>\n              <Input type=\"email\" name=\"email\" id=\"exampleEmail\" /><br/>\n            </FormGroup>\n            <FormGroup>\n              <Label className=\"label-text\" for=\"\">Anti price</Label>\n              <Input type=\"text\" name=\"\" id=\"\" /><br/>\n            </FormGroup>\n            <FormGroup>\n              <Label className=\"label-text\" for=\"\">Invite players (up to 5)</Label>\n              <Input type=\"text\" name=\"\" id=\"\" /><br/>\n            </FormGroup>\n          </Form>\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"primary\" onClick={create}>Create</Button>\n          <Button color=\"warning\" onClick={toggle}>Cancel</Button>\n        </ModalFooter>\n      </Modal>\n    );\n  }\n\n  create = () => {\n    const { created } = this.props;\n    const playersArray: Partial<Player>[] = [];\n\n    const p1: Partial<Player> = {\n      id: 'gf93j023jg',\n      points: 3823\n    }\n\n    const p2: Partial<Player> = {\n      id: '390gj3h8g2',\n      points: 8390\n    }\n\n    playersArray.push(p1);\n    playersArray.push(p2);\n\n    //use Partial here, only need requiredPointsPerPlayer, antiAmount, players\n    const newGame: Partial<Game> = {\n      requiredPointsPerPlayer: 5000,\n      antiAmount: 250,\n      players: playersArray\n    }\n  \n    axios\n      .post(`http://localhost:8000/api/game/create`, { game: newGame })\n      .then(res => {\n        if(res.data){\n          const { game } = res.data;\n\n          console.log(game)\n\n          created(game);\n        }\n      })\n      .catch(error => {\n        alert(\"Failed to create game \\n\\n\" + error);\n      })\n  }\n}\n\nexport default CreateGameModal;\n\ntype Props = {\n  isOpen: boolean;\n  toggle: () => void;\n  created: (game: Game) => void;\n};"]},"metadata":{},"sourceType":"module"}